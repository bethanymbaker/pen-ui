=== skruifab ===

001: first running instance with drawing pane and two placeholders for
     grid and cutfile

002: grid and cutfile objects installed

003: drawing area shows multiple strokes and multiple layers

004: strokes analyzed and the segment types drawn in different colors

005: encircle gestures can be found and drawn (note arbitrary shapes:
     doesn't need to be convex hull)

006: encircle selects things

007: making another selection without acting on first causes the first
     to revert to unstructured ink.

008: user has selected some ink and has begun a 'move' gesture

009: the user has set down the selected ink---a copy of the original.

010: user is dragging a selected bunch to the scrap grid. simulating drag
     and drop using a GlassPane since Java's DnD is excruciatingly bad.

011: scrap grid has state info about selected and hovered cell.

012: video showing multiple copies, and using selected items or selection
     boundary as drag handle.

013: video shows dragging into scrap grid with thumbnail appearing. bugs
     related to crossing over between components have been fixed.

014: scraps are persistent in the scrap grid. grid has a reference to the
     location (as an Area) and a thumbnail of what was originally dragged.

015: added code to analyze unstructured ink, draw the structured
     interpretation, and remove the unstructured ink

016: calculates and draws endcap regions. these are going to be used to
     detect if segment endpoints should be joined.

017: endcap intersections are now found (blue dots) by using segment
     intersection data and endcap overlap.

018: adjusts endpoints of nearby line segments

019: video showing user making a box. the system identifies junctions,
     merges points, identifies length constraints, and solves the system.

020: complete shapes are now recognized and drawn. these are called 
     'stencils'.

021: can form stencils that share boundaries, and can select as many or as
     needed.

022: joins stencils together by tossing out any that are subsets of
     another.

023: stencil with many right angle and same length constraints has been
     placed in scrap grid and several copies put in the cutfile.

024: the constraint system does not settle down to an error-free state,
     even though this particular set of constraints should do so.

025: scribble gesture to erase a segment

026: circle some endpoints to merge them

027: curves and ellipses can be latched (now using parametric points
     inside segments). also can select segments by overtracing them.

028: three guide points, one active. this gives a line and circle to the
     place where the pen is hovering

029: three guide points, two active. this gives a bunch of circles, a
     line connecting them, the midpoint, and the line orthogonal to the
     connecting line through the midpoint

030: three guide points, all three active. this gives a circle and the
     circle's center.

031: circular guides improved, bug fixed so stencils involving circles
     use perfect geometry (vs. raw input). selected stencils have alpha.

032: flow selection of splines.

033: stencils with holes.

034: stencils may be composed of two segments (e.g. line/ellipse or spline/spline).

035: closed segments (ellipses)

036: closed segments are now automatically stencils and can nest inside others.

037: can have closed splines ("blobs") and perfect circles.

038: split segments at injected points

039: improved right-angle recognizer lets me make notches. (jessica kit triangle)